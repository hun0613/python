# 문자열
data = 'Hello world'
print(data)

data = "Don't you know \"Python\"?" # \ : 이스케이프
print(data)


# 문자열의 연산
a = "Hello"
b = "World"
print(a + " " + b)


a = "String"
print(a * 3)


a = "ABCDEF"
print(a[2 : 4])



# 튜플
# 한번 선언된 값을 변경할 수 없다.
# 소괄호()를 이용한다.
# 공간효율적이다.

a = (1,2,3,4,5,6,7)

print(a[3])
print(a[1 : 4])

# 튜플을 사용하면 좋은 경우
""" 
- 서로 다른 성질을 데이터를 묶어서 관리해야 할 때
    : 최단 경로 알고리즘에서는 (비용, 노드번호)의 형태로 튜플 자료형을 자주 사용

- 데이터의 나열을 해싱(Hashing)의 키 값으로 사용해야 할 때
    : 튜플을 변경이 불가능하므로 리스트와 다르게 키 값으로 사용될 수 있다.
    
- 리스트보다 메모리를 효율적으로 사용해야 할 때
""" 